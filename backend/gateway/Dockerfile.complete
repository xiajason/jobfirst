# 使用官方Go镜像作为构建环境
FROM golang:1.21-alpine AS builder

# 设置工作目录
WORKDIR /app

# 安装必要的系统依赖
RUN apk add --no-cache git ca-certificates tzdata

# 复制go mod文件
COPY go.mod go.sum ./

# 下载依赖
RUN go mod download

# 复制源代码
COPY . .

# 构建应用
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o gateway_complete ./gateway_complete.go

# 使用轻量级的alpine镜像作为运行环境
FROM alpine:latest

# 安装ca-certificates用于HTTPS请求
RUN apk --no-cache add ca-certificates tzdata

# 创建非root用户
RUN addgroup -g 1001 -S gateway && \
    adduser -u 1001 -S gateway -G gateway

# 创建配置目录
RUN mkdir -p /root/config && chown -R gateway:gateway /root/config

# 设置工作目录
WORKDIR /root

# 从构建阶段复制二进制文件
COPY --from=builder /app/gateway_complete .

# 复制配置文件
COPY gateway_config_complete.yaml /root/config/config.yaml

# 设置权限
RUN chown gateway:gateway gateway_complete && \
    chmod +x gateway_complete

# 切换到非root用户
USER gateway

# 暴露端口
EXPOSE 8080

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# 启动命令
CMD ["./gateway_complete"]
