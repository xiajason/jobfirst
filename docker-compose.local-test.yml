version: '3.8'

services:
  # ==================== 数据库服务 ====================
  postgres:
    image: postgres:15-alpine
    container_name: jobfirst-postgres-local
    environment:
      POSTGRES_DB: jobfirst
      POSTGRES_USER: jobfirst_user
      POSTGRES_PASSWORD: jobfirst_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql
    networks:
      - jobfirst-local-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jobfirst_user -d jobfirst"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: jobfirst-redis-local
    ports:
      - "6379:6379"
    networks:
      - jobfirst-local-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==================== 微服务 ====================
  gateway:
    build:
      context: ./backend/gateway
      dockerfile: Dockerfile
    container_name: jobfirst-gateway-local
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=local
      - DATABASE_URL=postgresql://jobfirst_user:jobfirst_pass@postgres:5432/jobfirst
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - jobfirst-local-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==================== 监控服务 ====================
  prometheus:
    image: prom/prometheus:latest
    container_name: jobfirst-prometheus-local
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - jobfirst-local-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    container_name: jobfirst-grafana-local
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - jobfirst-local-network

volumes:
  postgres_data:
  grafana_data:

networks:
  jobfirst-local-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
